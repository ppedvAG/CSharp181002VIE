<Window x:Class="HalloWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HalloWPF"
        mc:Ignorable="d"
        Title="MainWindow" Height="381.2" Width="624">
    <Grid>
        <Button Content="Klick mich !" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="218" Height="117" Click="Button_Click" FontFamily="OCR A Extended" FontSize="22" Foreground="White">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="Red" Offset="0"/>
                    <GradientStop Color="#FFFFD300" Offset="1"/>
                </LinearGradientBrush>
            </Button.Background>
        </Button>
        <TextBox HorizontalAlignment="Left" Height="23" Margin="233,10,0,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="147"/>
        <RadioButton Content="RadioButton" HorizontalAlignment="Left" Margin="233,38,0,0" VerticalAlignment="Top" Width="147"/>
        <RadioButton Content="RadioButton" HorizontalAlignment="Left" Margin="233,57,0,0" VerticalAlignment="Top" Width="147"/>
        <RadioButton Content="RadioButton" HorizontalAlignment="Left" Margin="233,77,0,0" VerticalAlignment="Top" Width="147"/>
        <Calendar HorizontalAlignment="Left" Margin="397,12,0,0" VerticalAlignment="Top"/>
        <PasswordBox HorizontalAlignment="Left" Margin="242,109,0,0" VerticalAlignment="Top" Width="150"/>
        <Slider HorizontalAlignment="Left" Margin="-85,226,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Width="208">
            <Slider.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Slider.RenderTransform>
        </Slider>
        <Image Source="https://bilder.markt.de/images/cms/tiere/weisser_hamster.jpg" HorizontalAlignment="Left" Height="194" Margin="44,143,0,0" VerticalAlignment="Top" Width="229"/>
        <Button Content="Hallo Welt" HorizontalAlignment="Left" Margin="258,183,0,0" VerticalAlignment="Top" Width="134" Height="104">
            <Button.Template>
                <ControlTemplate>
                    <Border CornerRadius="25" Background="{TemplateBinding Background}" BorderThickness="2" BorderBrush="Black">

                        <Label Content="Hallo Welt" 
                               HorizontalContentAlignment="Center"
                               VerticalContentAlignment="Center"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Stretch"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <ListBox HorizontalAlignment="Left" Height="136" Margin="433,187,0,0" VerticalAlignment="Top" Width="143">
            <ListBoxItem Content="Apfel"/>
            <ListBoxItem Content="Banane"/>
            <ListBoxItem Content="Orange"/>
            <ListBoxItem Content="Birne"/>
            <Button Content="Weil ich kann ..."/>
        </ListBox>
        <CheckBox IsChecked="True" Content="CheckBox" HorizontalAlignment="Left" Margin="233,132,0,0" VerticalAlignment="Top" Width="164" Style="{DynamicResource CheckBoxStyle1}">
            <CheckBox.Resources>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
                <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
                <Style x:Key="OptionMarkFocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
                <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
                <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
                <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
                <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
                <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
                <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
                <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
                <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
                <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
                <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <Grid x:Name="markGrid">
                                            <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 49.983,9.09834L 4.52164,9.09834L 5,5.19331L 1.27664,3.52165L 9.255,6.08833L 3.31,-1.52588e-005L 2.98,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                            <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                        </Grid>
                                    </Border>
                                    <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasContent" Value="true">
                                        <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                        <Setter Property="Padding" Value="4,-1,0,0"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                        <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                        <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                        <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                        <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                        <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                        <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="true">
                                        <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                        <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="{x:Null}">
                                        <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                        <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </CheckBox.Resources>
        </CheckBox>

    </Grid>
</Window>
